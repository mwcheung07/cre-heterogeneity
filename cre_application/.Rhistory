for (j in 2:nrow(cre_app_results)) {
coef_contrast <- str_remove_all(rownames(cre_app_results)[j], "`")
coef_vars <- str_split(coef_contrast, " & ")[[1]]
if (all(coef_vars %in% unlist(cov_em_levels_test[i,]))) {
contrast <- c(contrast, 1)
} else {
contrast <- c(contrast, 0)
}
}
estimate <- as.numeric(contrast %*% cre_app_results$Estimate)
se  <- as.numeric(sqrt(t(contrast) %*% vcov(ols_inf) %*% contrast))
p <- 2*pnorm(-abs(estimate / se))
subgroup_tab$estimate[i] <- estimate
subgroup_tab$p[i] <- p
subgroup_tab$lower_ci[i] <- estimate - qnorm(0.975)*se
subgroup_tab$upper_ci[i] <- estimate + qnorm(0.975)*se
}
baseline_estimate <- cre_app_results$Estimate[1]
baseline_p <- cre_app_results$`Pr(>|t|)`[1]
baseline_lower_ci <- confint(ols_inf)[1,1]
baseline_upper_ci <- confint(ols_inf)[1,2]
subgroup_dat <- subgroup_tab %>%
dplyr::select(subgroup, estimate, p, lower_ci, upper_ci) %>%
filter(abs(estimate) >= plot_estimate_thresh) %>%
add_row(subgroup = "baseline subgroup",
estimate = baseline_estimate,
p = baseline_p,
lower_ci = baseline_lower_ci,
upper_ci = baseline_upper_ci)
subgroup_dat_n <- nrow(subgroup_dat)
subgroup_plot <- subgroup_plot_dat %>%
ggplot(., aes(x=subgroup, y=estimate)) +
geom_bar(stat = "identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=subgroup, ymin=lower_ci, ymax=upper_ci), width=0.4, colour="orange", alpha=0.9, size=1.3) +
labs(x = "Subgroup", y = "Estimate") +
scale_x_discrete(guide = guide_axis(n.dodge=subgroup_dat_n)) +
theme(axis.text.x = element_text(size=5))
subgroup_plot
names(subgroup_tab)
cov_em_levels_Test
cov_em_levels_test
cov_em_levels$var
names(subgroup_tab)
subgroup_tree <- subgroup_tab %>%
collapsibleTreeSummary(heirarchy = cov_em_levels$var,
root = "Baseline",
attribute = "p")
cov_em_levels$var
subgroup_tree <- subgroup_tab %>%
collapsibleTreeSummary(hierarchy = cov_em_levels$var,
root = "Baseline",
attribute = "p")
subgroup_tree <- subgroup_tab %>%
collapsibleTreeSummary(hierarchy = c("sex_male", "age_under2"),
root = "Baseline",
attribute = "p")
subgroup_tree
subgroup_tree <- subgroup_tab %>%
collapsibleTreeSummary(hierarchy = c("sex_male", "age_under2", "small_birthsize", "never_breastfed",
"education_none", "mass_media", "single_mother", "agri_occupation",
"rural_residence", "wealth_poor"),
root = "Baseline",
attribute = "p")
names(subgroup_tab)
names(cov_em_levels_test)
subgroup_tree <- subgroup_tab %>%
collapsibleTreeSummary(hierarchy = names(cov_em_levels_test),
root = "Baseline",
attribute = "p")
subgroup_tree
subgroup_tree <- subgroup_tab %>%
collapsibleTreeSummary(hierarchy = names(cov_em_levels_test),
root = "Baseline",
attribute = c("p", "lower_ci", "upper_ci"),
zoomable = F)
sum(subgroup_tab$p)
filter(subgroup_tab, p > 0.00001)
filter(subgroup_tab, p > 0.00001) -> bleh
view(bleh)
mimic_colCont <- '
level: 1
# Latent CollaboRATE - multiple continuous indicators
CollaboRATE =~ collaborate1 + collaborate2 + collaborate3
# Latent CollaboRATE - mulitple causes
CollaboRATE ~ fup + tech_fup + touch_fup
level: 2
#
collaborate3 ~~ 0*collaborate3
collaborate2 ~~ 0*collaborate2
collaborate1 ~~ 0*collaborate1
'
mimic_collab_cont <- sem(mimic_colCont,
missing = "fiml",
cluster = "provider_id",
data = oa_patient)
summary(mimic_collab_cont,
# fit.measures = T,
standardized = T)
mimic_colCont <- '
level: 1
# Latent CollaboRATE - multiple continuous indicators
CollaboRATE =~ collaborate1 + collaborate2 + collaborate3
# Latent CollaboRATE - mulitple causes
CollaboRATE ~ fup + tech_fup + touch_fup
level: 2
#
collaborate3 ~~ collaborate3
collaborate2 ~~ 0*collaborate2
collaborate1 ~~ 0*collaborate1
'
mimic_collab_cont <- sem(mimic_colCont,
missing = "fiml",
cluster = "provider_id",
data = oa_patient)
summary(mimic_collab_cont,
# fit.measures = T,
standardized = T)
mimic_colCont <- '
level: 1
# Latent CollaboRATE - multiple continuous indicators
CollaboRATE =~ collaborate1 + collaborate2 + collaborate3
# Latent CollaboRATE - mulitple causes
CollaboRATE ~ fup + tech_fup + touch_fup
level: 2
#
collaborate3 ~~ collaborate3
collaborate2 ~~ collaborate2
collaborate1 ~~ collaborate1
'
mimic_collab_cont <- sem(mimic_colCont,
missing = "fiml",
cluster = "provider_id",
data = oa_patient)
summary(mimic_collab_cont,
# fit.measures = T,
standardized = T)
mimic_colCont <- '
level: 1
# Latent CollaboRATE - multiple continuous indicators
CollaboRATE =~ collaborate1 + collaborate2 + collaborate3
# Latent CollaboRATE - mulitple causes
CollaboRATE ~ fup + tech_fup + touch_fup
level: 2
#
collaborate3 ~~ collaborate3
collaborate2 ~~ collaborate2
collaborate1 ~~ 0*collaborate1
'
mimic_collab_cont <- sem(mimic_colCont,
missing = "fiml",
cluster = "provider_id",
data = oa_patient)
summary(mimic_collab_cont,
# fit.measures = T,
standardized = T)
mimic_colCont <- '
level: 1
# Latent CollaboRATE - multiple continuous indicators
CollaboRATE =~ collaborate1 + collaborate2 + collaborate3
# Latent CollaboRATE - mulitple causes
CollaboRATE ~ fup + tech_fup + touch_fup
level: 2
#
collaborate3 ~~ collaborate3 + collaborate2 + collaborate1
collaborate2 ~~ collaborate2
collaborate1 ~~ 0*collaborate1
'
mimic_collab_cont <- sem(mimic_colCont,
missing = "fiml",
cluster = "provider_id",
data = oa_patient)
summary(mimic_collab_cont,
# fit.measures = T,
standardized = T)
?sem
mimic_colCont <- '
level: 1
# Latent CollaboRATE - multiple continuous indicators
CollaboRATE =~ collaborate1 + collaborate2 + collaborate3
# Latent CollaboRATE - mulitple causes
CollaboRATE ~ fup + tech_fup + touch_fup
level: 2
#
collaborate3 ~~ collaborate3 + collaborate2 + collaborate1
collaborate2 ~~ collaborate2 + collaborate1
collaborate1 ~~ 0*collaborate1
'
mimic_collab_cont <- sem(mimic_colCont,
missing = "fiml",
cluster = "provider_id",
data = oa_patient)
summary(mimic_collab_cont,
# fit.measures = T,
standardized = T)
mimic_colCont <- '
level: 1
# Latent CollaboRATE - multiple continuous indicators
CollaboRATE =~ collaborate1 + collaborate2 + collaborate3
# Latent CollaboRATE - mulitple causes
CollaboRATE ~ fup + tech_fup + touch_fup
level: 2
#
collaborate3 ~~ collaborate3
collaborate2 ~~ collaborate2
collaborate1 ~~ collaborate1
'
mimic_collab_cont <- sem(mimic_colCont,
missing = "fiml",
cluster = "provider_id",
data = oa_patient)
summary(mimic_collab_cont,
# fit.measures = T,
standardized = T)
mimic_colBin <-   '
# level: within
# Latent CollaboRATE - mulitple binary indicators
CollaboRATE_w =~ collaborate1_top + collaborate2_top + collaborate3_top
# Latent CollaboRATE - multiple causes
CollaboRATE_w ~ fup + tech_fup + touch_fup
# level: between
#   #
#   collaborate1_top ~~ collaborate1_top + collaborate2_top + collaborate3_top
#   collaborate2_top ~~ collaborate2_top + collaborate3_top
#   collaborate3_top ~~ collaborate3_top
'
mimic_collab_bin <- sem(mimic_colBin,
# missing = "fiml",
ordered = c("collaborate1_top","collaborate2_top","collaborate3_top"), # works without specifying indicators as categorical but not the same estimates
cluster = "provider_id",
data = oa_patient)
mimic_colCont <- '
level: 1
# Latent CollaboRATE - multiple continuous indicators
CollaboRATE =~ collaborate1 + collaborate2 + collaborate3
# Latent CollaboRATE - mulitple causes
CollaboRATE ~ fup + tech_fup + touch_fup
level: 2
#
collaborate3 ~~ collaborate3 + collaborate2 + collaborate1
collaborate2 ~~ collaborate2 + collaborate1
collaborate1 ~~ collaborate1
'
mimic_collab_cont <- sem(mimic_colCont,
missing = "fiml",
cluster = "provider_id",
data = oa_patient)
summary(mimic_collab_cont,
# fit.measures = T,
standardized = T)
model_test <- '
level: 1
# Latent CollaboRATE - multiple continuous indicators
CollaboRATE_w =~ colCont
# Latent CollaboRATE - mulitple causes
CollaboRATE_w ~ fup + tech_fup + touch_fup
level: 2
#
colCont ~~ colCont
'
mimic_collab_cont_test <- sem(model_test,
missing = "fiml",
cluster = "provider_id",
data = oa_patient)
summary(mimic_collab_cont_test,
standardized = T)
cont_collab <- lmer(colCont ~ arm*fup - arm + (1|provider_id),
data = oa_patient)
summary(cont_collab)
graph_sem(mimic_collab_cont_test)
mimic_colCont <- '
level: 1
# Latent CollaboRATE - multiple continuous indicators
CollaboRATE =~ collaborate1 + collaborate2 + collaborate3
# Latent CollaboRATE - mulitple causes
CollaboRATE ~ fup + tech_fup + touch_fup
level: 2
#
collaborate3 ~~ collaborate3
collaborate2 ~~ collaborate2
collaborate1 ~~ collaborate1
'
mimic_collab_cont <- sem(mimic_colCont,
missing = "fiml",
cluster = "provider_id",
data = oa_patient)
summary(mimic_collab_cont,
# fit.measures = T,
standardized = T)
table(oa_patient$collaborate1)
class(oa_patient$collaborate1)
class(oa_patient$collaborate2)
class(oa_patient$collaborate3)
table(oa_patient$collaborate3)
table(oa_patient$collaborate2)
mimic_colCont <- '
level: 1
# Latent CollaboRATE - multiple continuous indicators
CollaboRATE =~ collaborate1 + collaborate2 + collaborate3
# Latent CollaboRATE - mulitple causes
CollaboRATE ~ fup + tech_fup + touch_fup
level: 2
#
collaborate3 ~~ collaborate3
collaborate2 ~~ collaborate2
collaborate1 ~~ *0collaborate1
'
mimic_collab_cont <- sem(mimic_colCont,
missing = "fiml",
cluster = "provider_id",
data = oa_patient)
mimic_colCont <- '
level: 1
# Latent CollaboRATE - multiple continuous indicators
CollaboRATE =~ collaborate1 + collaborate2 + collaborate3
# Latent CollaboRATE - mulitple causes
CollaboRATE ~ fup + tech_fup + touch_fup
level: 2
#
collaborate3 ~~ collaborate3
collaborate2 ~~ collaborate2
collaborate1 ~~ 0*collaborate1
'
mimic_collab_cont <- sem(mimic_colCont,
missing = "fiml",
cluster = "provider_id",
data = oa_patient)
summary(mimic_collab_cont,
# fit.measures = T,
standardized = T)
graph_sem(mimic_collab_cont)
graph_sem(mimic_collab_cont)
graph_sem(mimic_collab_cont_test)
mimic_colCont <- '
level: 1
# Latent CollaboRATE - multiple continuous indicators
CollaboRATE =~ collaborate1 + collaborate2 + collaborate3
# Latent CollaboRATE - mulitple causes
CollaboRATE ~ fup + tech_fup + touch_fup
level: 2
#
CollaboRATE ~~ CollaboRATE
# collaborate3 ~~ collaborate3
# collaborate2 ~~ collaborate2
# collaborate1 ~~ 0*collaborate1
'
mimic_collab_cont <- sem(mimic_colCont,
missing = "fiml",
cluster = "provider_id",
data = oa_patient)
summary(mimic_collab_cont_test,
standardized = T)
graph_sem(mimic_collab_cont_test)
mimic_colCont <- '
level: 1
# Latent CollaboRATE - multiple continuous indicators
CollaboRATE =~ collaborate1 + collaborate2 + collaborate3
# Latent CollaboRATE - mulitple causes
CollaboRATE ~ fup + tech_fup + touch_fup
level: 2
#
collaborate3 ~~ collaborate3
collaborate2 ~~ collaborate2
collaborate1 ~~ 0*collaborate1
'
mimic_collab_cont <- sem(mimic_colCont,
missing = "fiml",
cluster = "provider_id",
data = oa_patient)
summary(mimic_collab_cont,
# fit.measures = T,
standardized = T)
graph_sem(mimic_collab_cont)
mimic_colCont <- '
level: 1
# Latent CollaboRATE - multiple continuous indicators
CollaboRATE =~ collaborate1 + collaborate2 + collaborate3
# Latent CollaboRATE - mulitple causes
CollaboRATE ~ fup + tech_fup + touch_fup
level: 2
#
collaborate3 ~~ collaborate3
collaborate2 ~~ collaborate2
collaborate1 ~~ collaborate1
'
mimic_collab_cont <- sem(mimic_colCont,
missing = "fiml",
cluster = "provider_id",
data = oa_patient)
summary(mimic_collab_cont,
# fit.measures = T,
standardized = T)
graph_sem(mimic_collab_cont)
mimic_colCont <- '
level: 1
# Latent CollaboRATE - multiple continuous indicators
CollaboRATE =~ collaborate1 + collaborate2 + collaborate3
# Latent CollaboRATE - mulitple causes
CollaboRATE ~ fup + tech_fup + touch_fup
level: 2
#
collaborate3 ~~ collaborate3
collaborate2 ~~ collaborate2
collaborate1 ~~ collaborate1
'
mimic_collab_cont <- sem(mimic_colCont,
missing = "fiml",
cluster = "provider_id",
data = oa_patient)
summary(mimic_collab_cont,
# fit.measures = T,
standardized = T)
graph_sem(mimic_collab_cont)
graph_sem(mimic_collab_cont)
mimic_colCont <- '
level: 1
# Latent CollaboRATE - multiple continuous indicators
CollaboRATE =~ collaborate1 + collaborate2 + collaborate3
# Latent CollaboRATE - mulitple causes
CollaboRATE ~ fup + tech_fup + touch_fup
fup ~~ fup
tech_fup ~~ tech_fup
touch_fup ~~ touch_fup
level: 2
#
collaborate3 ~~ collaborate3
collaborate2 ~~ collaborate2
collaborate1 ~~ collaborate1
'
mimic_collab_cont <- sem(mimic_colCont,
missing = "fiml",
cluster = "provider_id",
data = oa_patient)
summary(mimic_collab_cont,
# fit.measures = T,
standardized = T)
graph_sem(mimic_collab_cont)
mimic_colCont <- '
level: 1
# Latent CollaboRATE - multiple continuous indicators
CollaboRATE =~ collaborate1 + collaborate2 + collaborate3
# Latent CollaboRATE - mulitple causes
CollaboRATE ~ fup + tech_fup + touch_fup
level: 2
#
collaborate3 ~~ collaborate3
collaborate2 ~~ collaborate2
collaborate1 ~~ collaborate1
'
mimic_collab_cont <- sem(mimic_colCont,
missing = "fiml",
cluster = "provider_id",
data = oa_patient)
summary(mimic_collab_cont,
# fit.measures = T,
standardized = T)
graph_sem(mimic_collab_cont)
subgroup_tree <- subgroup_tab %>%
collapsibleTreeSummary(hierarchy = names(cov_em_levels_test),
root = "Baseline",
attribute = c("p", "lower_ci", "upper_ci"),
zoomable = F)
subgroup_tree <- subgroup_tab %>%
collapsibleTreeSummary(hierarchy = names(cov_em_levels_test),
root = "Baseline",
attribute = p,
zoomable = F)
subgroup_tree <- subgroup_tab %>%
collapsibleTreeSummary(hierarchy = names(cov_em_levels_test),
root = "Baseline",
attribute = "p",
zoomable = F)
subgroup_tree
cre_app_results
subgroup_plot <- subgroup_plot_dat %>%
ggplot(., aes(x=subgroup, y=estimate)) +
geom_bar(stat = "identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=subgroup, ymin=lower_ci, ymax=upper_ci), width=0.4, colour="orange", alpha=0.9, size=1.3) +
labs(x = "Subgroup", y = "Estimate") +
scale_x_discrete(guide = guide_axis(n.dodge=subgroup_dat_n)) +
theme(axis.text.x = element_text(size=5))
subg
subgroup_plot
summmary(lm(outcome ~ exposure, data = data_ds))
summary(lm(outcome ~ exposure, data = data_ds))
names(data_ds)
summary(lm(stunted ~ drought, data = data_ds))
cre_app_results
plot_estimate_thresh
view(subgroup_tab)
view(subgroup_dat)
# Data frame with all subgroup estimates, p-values, and 95% CI
subgroup_tab <- cov_em_levels_test %>%
rowwise() %>%
unite("subgroup", sep = ", ", remove = F) %>%
mutate(estimate = NA,
p = NA,
lower_ci = NA,
upper_ci = NA)
subgroup_tab
view(subgroup_tab)
?sample
sample(data_ds, size = nrow(data_ds)/10)
size = nrow(data_ds)/10
size
round(size)
sample(data_ds, size = round(size)) -> test
nrow(data_ds)
?sample_frac
sampe_n(data_ds, round(size))
sample_n(data_ds, round(size))
sample_n(data_ds, round(size)) -> test
subgroup_tree
